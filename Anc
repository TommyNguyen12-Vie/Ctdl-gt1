#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

// QuickSort
int quickSortCount = 0;  // Biến đếm thao tác của QuickSort
void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pivot = arr[high];  // Chọn phần tử cuối làm pivot
        int i = low - 1;
        
        for (int j = low; j < high; j++) {
            quickSortCount++;  // Mỗi lần so sánh là một thao tác
            if (arr[j] < pivot) {
                i++;
                swap(arr[i], arr[j]);
            }
        }
        swap(arr[i + 1], arr[high]);  // Đưa pivot vào đúng vị trí
        quickSort(arr, low, i);  // Đệ quy với phần mảng bên trái
        quickSort(arr, i + 2, high);  // Đệ quy với phần mảng bên phải
    }
}

// HeapSort
int heapSortCount = 0;  // Biến đếm thao tác của HeapSort
void heapify(int arr[], int n, int i) {
    int largest = i;  // Khởi tạo largest là gốc
    int left = 2 * i + 1;  // Con trái
    int right = 2 * i + 2;  // Con phải

    if (left < n && arr[left] > arr[largest]) {
        largest = left;
    }
    if (right < n && arr[right] > arr[largest]) {
        largest = right;
    }

    if (largest != i) {
        swap(arr[i], arr[largest]);
        heapSortCount++;  // Hoán đổi là một thao tác
        heapify(arr, n, largest);  // Đệ quy để duy trì heap
    }
}

void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i);
    }

    for (int i = n - 1; i > 0; i--) {
        swap(arr[0], arr[i]);
        heapSortCount++;  // Hoán đổi là một thao tác
        heapify(arr, i, 0);
    }
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    int choice;
    int n;

    cout << "Nhap so phan tu cua mang: ";
    cin >> n;

    // Khởi tạo mảng ngẫu nhiên
    int arr[100];
    srand(time(0));  // Khởi tạo hạt giống ngẫu nhiên

    // Sinh mảng ngẫu nhiên từ 1 đến 100
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100 + 1;  // Sinh số ngẫu nhiên từ 1 đến 100
    }

    cout << "Mang ngau nhien: ";
    printArray(arr, n);

    do {
        cout << "\nMenu:\n";
        cout << "1. QuickSort\n";
        cout << "2. HeapSort\n";
        cout << "3. Thoat\n";
        cout << "Nhap lua chon: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                int arrCopy1[100];
                for (int i = 0; i < n; i++) {
                    arrCopy1[i] = arr[i];  // Sao chép mảng ban đầu
                }
                quickSortCount = 0;  // Đặt lại biến đếm thao tác
                quickSort(arrCopy1, 0, n - 1);
                cout << "Mang sau khi QuickSort: ";
                printArray(arrCopy1, n);
                cout << "Tong so lan thuc hien trong QuickSort: " << quickSortCount << endl;
                break;
            }
            case 2: {
                int arrCopy2[100];
                for (int i = 0; i < n; i++) {
                    arrCopy2[i] = arr[i];  // Sao chép mảng ban đầu
                }
                heapSortCount = 0;  // Đặt lại biến đếm thao tác
                heapSort(arrCopy2, n);
                cout << "Mang sau khi HeapSort: ";
                printArray(arrCopy2, n);
                cout << "Tong so lan thuc hien trong HeapSort: " << heapSortCount << endl;
                break;
            }
            case 3:
                cout << "Thoat chuong trinh.\n";
                break;
            default:
                cout << "Lua chon khong hop le. Vui long chon lai.\n";
                break;
        }
    } while (choice != 3);

    return 0;
}
